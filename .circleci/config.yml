{
   "jobs" : {
      "build" : {
         "environment" : {
            "CIRCLE_ARTIFACTS" : "/tmp/circle-artifacts/build"
         },
         "machine" : {
            "enabled" : true
         },
         "steps" : [
            "checkout",
            {
               "run" : {
                  "command" : "mkdir -p $CIRCLE_ARTIFACTS"
               }
            },
            {
               "run" : {
                  "command" : "cp cd-bare stable/"
               }
            },
            {
               "run" : {
                  "command" : "cp cd-bare chromium/"
               }
            },
            {
               "run" : {
                  "command" : "git clone https://github.com/manakai/perl-web-driver-client"
               }
            },
            {
               "run" : {
                  "command" : "cd perl-web-driver-client && make test-deps"
               }
            },
            {
               "run" : {
                  "command" : "ip route | awk '/docker0/ { print $NF }' > docker0-ip.txt; cat docker0-ip.txt"
               }
            },
            {
               "run" : {
                  "command" : "mkdir temp; echo 'FROM debian:sid' > temp/Dockerfile; echo 'RUN apt-get update && apt-get install -y ffmpeg' >> temp/Dockerfile"
               }
            },
            {
               "run" : {
                  "command" : "docker build -t temp temp"
               }
            },
            {
               "run" : {
                  "command" : "docker info"
               }
            },
            {
               "run" : {
                  "command" : "docker build -t quay.io/wakaba/chromedriver:stable stable"
               }
            },
            {
               "run" : {
                  "command" : "docker build -t quay.io/wakaba/chromedriver:chromium chromium"
               }
            },
            {
               "run" : {
                  "command" : "docker run --name server1 -d -p 9515:9515 --add-host=dockerhost:`cat docker0-ip.txt` quay.io/wakaba/chromedriver:stable /cd"
               }
            },
            {
               "run" : {
                  "command" : "while ! curl -f http://localhost:9515/status ; do sleep 1; done"
               }
            },
            {
               "run" : {
                  "command" : "cd perl-web-driver-client && TEST_WD_URL=http://localhost:9515 WEBUA_DEBUG=2 TEST_SERVER_LISTEN_HOST=0.0.0.0 TEST_SERVER_HOSTNAME=dockerhost make test"
               }
            },
            {
               "run" : {
                  "command" : "! docker run -i -t temp timeout 2 ffprobe rtp://224.0.0.56:9515 # or fail"
               }
            },
            {
               "run" : {
                  "command" : "docker logs server1"
               }
            },
            {
               "run" : {
                  "command" : "docker kill server1"
               }
            },
            {
               "run" : {
                  "command" : "docker run --name server2 -d -p 9515:9515 --add-host=dockerhost:`cat docker0-ip.txt` -e WD_RTP_PORT=5553 quay.io/wakaba/chromedriver:chromium /cd"
               }
            },
            {
               "run" : {
                  "command" : "while ! curl -f http://localhost:9515/status ; do sleep 1; done"
               }
            },
            {
               "run" : {
                  "command" : "cd perl-web-driver-client && TEST_WD_URL=http://localhost:9515 WEBUA_DEBUG=2 TEST_SERVER_LISTEN_HOST=0.0.0.0 TEST_SERVER_HOSTNAME=dockerhost make test"
               }
            },
            {
               "run" : {
                  "command" : "docker run -i -t temp timeout 2 ffprobe rtp://224.0.0.56:5553 # or fail"
               }
            },
            {
               "run" : {
                  "command" : "docker logs server2"
               }
            },
            {
               "run" : {
                  "command" : "docker kill server2"
               }
            },
            {
               "store_artifacts" : {
                  "path" : "/tmp/circle-artifacts/build"
               }
            },
            {
               "deploy" : {
                  "command" : "if [ \u0022${CIRCLE_BRANCH}\u0022 == 'master' ]; then\u000Atrue\u000Adocker login -e $DOCKER_EMAIL -u $DOCKER_USER -p $DOCKER_PASS quay.io || docker login -u $DOCKER_USER -p $DOCKER_PASS quay.io\u000Afi"
               }
            },
            {
               "deploy" : {
                  "command" : "if [ \u0022${CIRCLE_BRANCH}\u0022 == 'master' ]; then\u000Atrue\u000Adocker push quay.io/wakaba/chromedriver:stable && curl -sSLf $BWALL_URL -X POST\u000Afi"
               }
            },
            {
               "deploy" : {
                  "command" : "if [ \u0022${CIRCLE_BRANCH}\u0022 == 'master' ]; then\u000Atrue\u000Adocker push quay.io/wakaba/chromedriver:chromium && curl -sSLf $BWALL_URL.chromium -X POST\u000Afi"
               }
            }
         ]
      },
      "deploy_nightly" : {
         "machine" : {
            "enabled" : true
         },
         "steps" : [
            "checkout",
            {
               "deploy" : {
                  "command" : "git rev-parse HEAD > head.txt\u000Acurl -f -s -S --request POST --header \u0022Authorization:token $GITHUB_ACCESS_TOKEN\u0022 --header \u0022Content-Type:application/json\u0022 --data-binary \u0022{\u005C\u0022base\u005C\u0022:\u005C\u0022master\u005C\u0022,\u005C\u0022head\u005C\u0022:\u005C\u0022`cat head.txt`\u005C\u0022,\u005C\u0022commit_message\u005C\u0022:\u005C\u0022auto-merge $CIRCLE_BRANCH into master\u005C\u0022}\u0022 \u0022https://api.github.com/repos/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/merges\u0022"
               }
            }
         ]
      },
      "deploy_staging" : {
         "machine" : {
            "enabled" : true
         },
         "steps" : [
            "checkout",
            {
               "deploy" : {
                  "command" : "git rev-parse HEAD > head.txt\u000Acurl -f -s -S --request POST --header \u0022Authorization:token $GITHUB_ACCESS_TOKEN\u0022 --header \u0022Content-Type:application/json\u0022 --data-binary \u0022{\u005C\u0022base\u005C\u0022:\u005C\u0022master\u005C\u0022,\u005C\u0022head\u005C\u0022:\u005C\u0022`cat head.txt`\u005C\u0022,\u005C\u0022commit_message\u005C\u0022:\u005C\u0022auto-merge $CIRCLE_BRANCH into master\u005C\u0022}\u0022 \u0022https://api.github.com/repos/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/merges\u0022"
               }
            }
         ]
      }
   },
   "version" : 2,
   "workflows" : {
      "build" : {
         "jobs" : [
            "build",
            {
               "deploy_nightly" : {
                  "filters" : {
                     "branches" : {
                        "only" : [
                           "nightly"
                        ]
                     }
                  },
                  "requires" : [
                     "build"
                  ]
               }
            },
            {
               "deploy_staging" : {
                  "filters" : {
                     "branches" : {
                        "only" : [
                           "staging"
                        ]
                     }
                  },
                  "requires" : [
                     "build"
                  ]
               }
            }
         ]
      },
      "version" : 2
   }
}
